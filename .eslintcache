[{"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/index.js":"1","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/reportWebVitals.js":"2","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/App.js":"3","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/landing-page/index.js":"4","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/forgot-password/index.js":"5","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/profile/index.js":"6","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/mixins/api.js":"7","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/resources/authentication.js":"8","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/requester.js":"9","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/constants/api.js":"10","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/components/notification-alert.js":"11"},{"size":500,"mtime":1606997714204,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606997714205,"results":"14","hashOfConfig":"13"},{"size":804,"mtime":1607053092991,"results":"15","hashOfConfig":"13"},{"size":7464,"mtime":1607409093581,"results":"16","hashOfConfig":"13"},{"size":1049,"mtime":1607034730432,"results":"17","hashOfConfig":"13"},{"size":10296,"mtime":1607409093604,"results":"18","hashOfConfig":"13"},{"size":124,"mtime":1607330510249,"results":"19","hashOfConfig":"13"},{"size":1039,"mtime":1607409093609,"results":"20","hashOfConfig":"13"},{"size":3542,"mtime":1607330648720,"results":"21","hashOfConfig":"13"},{"size":216,"mtime":1607329023872,"results":"22","hashOfConfig":"13"},{"size":700,"mtime":1607334343279,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ih59n3",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/index.js",[],["51","52"],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/reportWebVitals.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/App.js",["53","54"],"// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport LandingPageScreen from './screens/landing-page'\nimport ProfileScreen from './screens/profile'\nimport ForgotPasswordScreen from './screens/forgot-password'\n\nfunction App() {\n  return (\n    <Router>\n      <switch>\n        <Route exact path=\"/\" component={LandingPageScreen} />\n        <Route exact path=\"/login\" component={LandingPageScreen} />\n        <Route exact path=\"/profile\" component={ProfileScreen} />\n        <Route exact path=\"/forgot-password\" component={ForgotPasswordScreen} />\n      </switch>\n    </Router>\n    // <React.Fragment>\n    //   <LandingPage />\n    // </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/landing-page/index.js",["55","56","57","58"],"import './landingPage.css';\nimport React, { useState, useEffect, useRef } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { authentication } from '../../mixins/api'\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\nimport NotificationToast from '../../components/notification-alert'\n\nfunction LandingPage(props) {\n\n  const firstRender = useRef(true)\n  const [showRegister, setShowRegister] = useState(false)\n  const [formData, setFormData] = useState({\n    loginUsername: '',\n    loginPassword: '',\n    registerUsername: '',\n    registerPassword: '',\n    errorMessage: '',\n    successMessage: '',\n    disableLoginButton: true,\n    disableRegisterButton: true,\n    redirect: false\n  })\n\n  const onRegisterLinkClick = () => setShowRegister(true)\n  const onLoginLinkClick = () => setShowRegister(false)\n\n  const updateFormData = e => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  const loginFormValidation = () => {\n    if(formData.loginUsername && formData.loginPassword) {\n      return false;\n    }else{\n      return true\n    }\n  }\n\n  const registerFormValidation = () => {\n    if(formData.registerUsername && formData.registerPassword) {\n      return false;\n    }else{\n      return true\n    }\n  }\n\n  const handleLoginFormSubmission = async () => {\n    setFormData(prevState => ({...prevState, errorMessage: '', disableLoginButton: true}))\n    const loginFormData = {\n      password: formData.loginPassword,\n      phoneNumber: formData.loginUsername\n    }\n    const loginResponseObj = await authentication.loginUser(loginFormData)\n    const { status, response } = loginResponseObj\n    if(status === SUCCESS_STATUS) {\n\n    }else{\n      setFormData(prevState => ({...prevState, errorMessage: response.error, disableLoginButton: false}))\n    }\n  }\n\n  const handleRegisterFormSubmission = async (e) => {\n    setFormData(prevState => ({...prevState, errorMessage: '', disableRegisterButton: true}))\n    console.log(formData)\n    const registerFormData = {\n      password: formData.registerPassword,\n      phoneNumber: formData.registerUsername\n    }\n    const registerResponseObj = await authentication.registerUser(registerFormData)\n    const { status, response } = registerResponseObj\n    if(status === SUCCESS_STATUS) {\n      console.log(response)\n      setFormData(prevState => ({...prevState, redirect: true}))\n      props.history.push(\"/profile\");\n    }else{\n      setFormData(prevState => ({...prevState, errorMessage: response.error, disableRegisterButton: false}))\n    }\n  }\n\n  useEffect(() => {\n    if(firstRender.current) {\n      firstRender.current = false\n      return\n    }\n\n    if(formData.redirect) {\n      return <Redirect to=\"profile\" />   \n    }\n      \n    \n    console.log(loginFormValidation())\n    console.log(formData)\n    setFormData(prevState => ({ ...prevState, disableLoginButton: loginFormValidation(), disableRegisterButton: registerFormValidation() }))\n  }, [formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername])\n\n  return (\n    <div className=\"App\">\n      <div class=\"banner-information row\">\n        <div class=\"col-lg-5\">\n          <h6>Jai Congress!!</h6>\n        </div>\n        <div class=\"col-lg-5\">\n          <h6 class=\"pull-right\">Jay Ho Rahul Gandhi!!!</h6>\n        </div><br/>\n        <div>\n          <h2 class=\"center-text\">Join hands for the change</h2>\n          <h1 class=\"black-color\"> \n            <img src=\"../../assets/images/logo.png\" class=\"logo\" />\n            <span>All India Rahul Gandhi Brigade Congress</span>\n          </h1>\n        </div> \n      </div>\n      <svg viewBox=\"0 50 500 500\" \n        preserveAspectRatio=\"xMinYMin meet\"\n        style={{zIndex: -1}}> \n          \n        <path d=\"M0, 100 C150, 200 350, \n            0 500, 100 L500, 00 L0, 0 Z\" \n            style={{stroke: 'none', fill: '#FA8223'}}> \n        </path> \n      </svg>\n      <svg viewBox=\"0 40 500 500\" \n        preserveAspectRatio=\"xMinYMin meet\"\n        style={{zIndex: -2}}> \n          \n        <path d=\"M0, 100 C150, 200 350, \n            0 500, 100 L500, 00 L0, 0 Z\" \n            style={{stroke: 'none', fill: '#FD9A24'}}> \n        </path> \n      </svg> \n      <svg viewBox=\"0 30 500 500\" \n        preserveAspectRatio=\"xMinYMin meet\"\n        style={{zIndex: -2}}> \n          \n        <path d=\"M0, 100 C150, 200 350, \n            0 500, 100 L500, 00 L0, 0 Z\" \n            style={{stroke: 'none', fill: '#FBB124'}}> \n        </path> \n      </svg> \n      <svg viewBox=\"0 40 500 500\" \n        preserveAspectRatio=\"xMinYMin meet\"\n        style={{zIndex: -2}}> \n          \n        <path d=\"M0, 100 C150, 200 350, \n            0 500, 100 L500, 00 L0, 0 Z\" \n            style={{stroke: 'none', fill: '#FD9A24'}}> \n        </path> \n      </svg> \n      <div class=\"main\">\n        <div class=\"form col-md-4\">\n          {!showRegister && <form onSubmit={ handleLoginFormSubmission }> \n            <NotificationToast \n              successMessage={formData.successMessage}\n              errorMessage={formData.errorMessage}\n            />\n            <h3 style={{textAlign: 'center'}}>Existing Member</h3>\n            <hr/>\n            <div class=\"form-group\">\n              <label for=\"loginUsername\">Email Address/Phone Number</label>\n              <input type=\"text\" class=\"form-control\" id=\"loginUsername\" name=\"loginUsername\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\n              <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your details with anyone else.</small>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"loginPassword\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"loginPassword\" name=\"loginPassword\" onChange={updateFormData} />\n            </div>\n            <div class=\"form-group\">\n              <Link class=\"pull-right\" onClick={onRegisterLinkClick}>Become a member</Link>\n              <Link class=\"pull-left\" to=\"/forgot-password\">Forgot Password?</Link>\n            </div><br/><br/>\n            <button type=\"button\" class=\"btn btn-primary\" disabled={ formData.disableLoginButton } onClick={ handleLoginFormSubmission }>Sign In</button>\n          </form>}\n          {showRegister && <form onSubmit={ handleRegisterFormSubmission }> \n            <h3 style={{textAlign: 'center'}}>New Member</h3>\n            <hr/>\n            <div class=\"form-group\">\n              <label for=\"registerUsername\">Email Address/Phone Number</label>\n              <input type=\"text\" class=\"form-control\" id=\"registerUsername\" name=\"registerUsername\" aria-describedby=\"emailHelp\"  onChange={updateFormData}/>\n              <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your details with anyone else.</small>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"registerPassword\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"registerPassword\" name=\"registerPassword\" onChange={updateFormData} />\n            </div>\n            <div class=\"form-group\">\n              <Link class=\"pull-right\" onClick={onLoginLinkClick}>Already a member, login</Link>\n              </div><br/><br/>\n            <button type=\"button\" class=\"btn btn-primary\" disabled={formData.disableRegisterButton} onClick={ handleRegisterFormSubmission }>Become a member</button>\n          </form>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/forgot-password/index.js",["59","60"],"import './forgotPassword.css';\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction ForgotPassword() {\n  return (\n    <div class=\"forgot-password\">\n        <div class=\"col-lg-4 col-lg-offset-4\">\n            <img style={{marginTop: '20%', textAlign: 'center', marginLeft: '20%'}} src=\"../../assets/images/logo.png\" />\n        </div>\n        <div class=\"forgot-password-main\">\n            <div class=\"form col-lg-4 col-lg-offset-4\">\n                <form>\n                    <h3 class=\"center-text\">Forgot Password</h3>\n                    <hr/>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Email Address/Phone Number</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Reset Password</button>\n                </form>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/profile/index.js",["61","62","63"],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/mixins/api.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/resources/authentication.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/requester.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/constants/api.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/components/notification-alert.js",["64","65","66","67"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction NotificationAlert(props) {\n  \n  const firstRender = useRef(true)\n  useEffect(() => {\n    if(firstRender.current) {\n      firstRender.current = false\n      return\n    }\n  }, [])\n\n  return (\n    <div>\n      {props.successMessage && <div class=\"alert alert-success\" role=\"alert\">\n        <a href=\"#\" class=\"alert-link\">{`Success! ${props.successMessage}.`}</a>\n      </div>}\n      {props.errorMessage && <div class=\"alert alert-danger\" role=\"alert\">\n        <a href=\"#\" class=\"alert-link\">{`Error! ${props.errorMessage}.`}</a>\n      </div>}\n    </div>\n  );\n}\n\nexport default NotificationAlert;\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":7,"column":3,"nodeType":"74","messageId":"75","endLine":7,"endColumn":9},{"ruleId":"72","severity":1,"message":"76","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":11},{"ruleId":"72","severity":1,"message":"77","line":5,"column":26,"nodeType":"74","messageId":"75","endLine":5,"endColumn":38},{"ruleId":"78","severity":1,"message":"79","line":137,"column":6,"nodeType":"80","endLine":137,"endColumn":108,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":151,"column":13,"nodeType":"84","endLine":151,"endColumn":68},{"ruleId":"85","severity":1,"message":"86","line":249,"column":13,"nodeType":"84","endLine":249,"endColumn":61},{"ruleId":"72","severity":1,"message":"87","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":9,"column":13,"nodeType":"84","endLine":9,"endColumn":122},{"ruleId":"72","severity":1,"message":"87","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":10,"column":11,"nodeType":"84","endLine":10,"endColumn":66},{"ruleId":"82","severity":1,"message":"83","line":26,"column":17,"nodeType":"84","endLine":26,"endColumn":89},{"ruleId":"72","severity":1,"message":"88","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"87","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"89","line":17,"column":9,"nodeType":"84","endLine":17,"endColumn":40},{"ruleId":"85","severity":1,"message":"89","line":20,"column":9,"nodeType":"84","endLine":20,"endColumn":40},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'ERROR_STATUS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formData', 'loginFormValidation', and 'registerFormValidation'. Either include them or remove the dependency array.","ArrayExpression",["92"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'useState' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername, formData, loginFormValidation, registerFormValidation]",{"range":"95","text":"96"},[4512,4614],"[formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername, formData, loginFormValidation, registerFormValidation]"]