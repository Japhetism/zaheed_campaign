[{"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/index.js":"1","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/reportWebVitals.js":"2","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/App.js":"3","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/reset-password/index.js":"4","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/forgot-password/index.js":"5","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/profile/index.js":"6","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/home/dashboard/index.js":"7","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/landing-page/index.js":"8","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/mixins/api.js":"9","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/constants/api.js":"10","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/components/notification-alert.js":"11","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/resources/authentication.js":"12","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/requester.js":"13","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/helper.js":"14","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/validator.js":"15","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/storage.js":"16","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/error/index.js":"17","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/error_handler.js":"18","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/converter.js":"19"},{"size":500,"mtime":1606997714204,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606997714205,"results":"22","hashOfConfig":"21"},{"size":1093,"mtime":1608618663220,"results":"23","hashOfConfig":"21"},{"size":3940,"mtime":1608618663231,"results":"24","hashOfConfig":"21"},{"size":3131,"mtime":1608618663226,"results":"25","hashOfConfig":"21"},{"size":19154,"mtime":1608621799778,"results":"26","hashOfConfig":"21"},{"size":8449,"mtime":1607444529235,"results":"27","hashOfConfig":"21"},{"size":12077,"mtime":1608618663229,"results":"28","hashOfConfig":"21"},{"size":124,"mtime":1607330510249,"results":"29","hashOfConfig":"21"},{"size":216,"mtime":1607329023872,"results":"30","hashOfConfig":"21"},{"size":847,"mtime":1608618663221,"results":"31","hashOfConfig":"21"},{"size":1463,"mtime":1608618663232,"results":"32","hashOfConfig":"21"},{"size":3542,"mtime":1607330648720,"results":"33","hashOfConfig":"21"},{"size":80,"mtime":1608621072109,"results":"34","hashOfConfig":"21"},{"size":743,"mtime":1608618663233,"results":"35","hashOfConfig":"21"},{"size":244,"mtime":1608618663233,"results":"36","hashOfConfig":"21"},{"size":424,"mtime":1608618663225,"results":"37","hashOfConfig":"21"},{"size":1144,"mtime":1608618663233,"results":"38","hashOfConfig":"21"},{"size":136,"mtime":1608621199972,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ih59n3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/index.js",[],["87","88"],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/reportWebVitals.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/App.js",["89"],"// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport LandingPageScreen from './screens/landing-page'\nimport ProfileScreen from './screens/profile'\nimport ForgotPasswordScreen from './screens/forgot-password'\nimport DashboardScreen from './screens/home/dashboard'\nimport ResetPasswordScreen from './screens/reset-password'\nimport ErrorScreen from './screens/error'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n          <Route exact path=\"/\" component={LandingPageScreen} />\n          <Route exact path=\"/login\" component={LandingPageScreen} />\n          <Route exact path=\"/profile\" component={ProfileScreen} />\n          <Route exact path=\"/forgot-password\" component={ForgotPasswordScreen} />\n          <Route exact path=\"/reset-password/:token\" component={ResetPasswordScreen} />\n          <Route exact path=\"/home\" component={DashboardScreen} />\n          <Route component={ErrorScreen} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/reset-password/index.js",["90","91","92"],"import React, { useRef, useState, useEffect } from 'react'\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\nimport NotificationToast from '../../components/notification-alert'\nimport { authentication } from '../../mixins/api'\nimport { checkPasswordIsValid, checkPasswordIsMatch } from '../../utils/validator'\nimport { Link, Redirect } from 'react-router-dom'\n\nfunction ResetPassword(props) {\n  const firstRender = useRef(true)  \n    \n  const [formData, setFormData] = useState({\n    errorMessage: \"\",\n    successMessage: \"\",\n    disableButton: true,\n    isPasswordValid: false,\n    isPasswordMatch: false,\n    password: \"\",\n    confirmPassword: \"\",\n    isLoading: false,\n    token: \"\"\n  })\n\n  const updateFormData = e => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  const formValidation = () => {\n    if(formData.confirmPassword && formData.password) {\n      return false;\n    }else{\n      return true\n    }\n  }\n\n  const handleResetPasswordSubmission = async () => {\n    setFormData(prevState => ({...prevState, errorMessage: '', disableButton: true, isLoading: true}))\n    const resetPasswordFormData = {\n        password: formData.password,\n        confirmPassword: formData.confirmPassword\n    }\n    const forgotPasswordResponseObj = await authentication.resetPassword(resetPasswordFormData)\n    const { status, response } = forgotPasswordResponseObj\n    if(status === SUCCESS_STATUS) {\n\n    }else{\n      setFormData(prevState => ({...prevState, errorMessage: response, disableButton: false, isLoading: false}))\n    }\n  }\n\n  useEffect(() => {\n    if(firstRender.current) {\n      const { token } = props.match.params;\n      setFormData(prevState => ({...prevState, token: token}))\n      firstRender.current = false\n      return\n    } \n\n    setFormData(prevState => ({ \n      ...prevState, \n      disableButton: !checkPasswordIsValid(formData.password) || !checkPasswordIsMatch(formData.password, formData.confirmPassword),\n      isPasswordValid: checkPasswordIsValid(formData.password),\n      isPasswordMatch: checkPasswordIsMatch(formData.password, formData.confirmPassword)\n    }))\n  }, [formData.password, formData.confirmPassword])\n\n  return (\n    <div class=\"container h-100 forgot-password\">\n      <div class=\"row h-100 justify-content-center align-items-center\">\n        <div class=\"col-lg-offset-3 col-lg-4 col-lg-offset-3\">\n          <img src=\"../../assets/images/logo.png\" />\n          <form class=\"form\" onSubmit={ handleResetPasswordSubmission }>\n            <NotificationToast \n                successMessage={formData.successMessage}\n                errorMessage={formData.errorMessage}\n            />\n            <h3 class=\"center-text\">Reset Password</h3>\n            <hr/>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Password</label>\n              <input type=\"text\" class=\"form-control\" id=\"password\" name=\"password\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\n              {formData.password && !formData.isPasswordValid && <small id=\"emailHelp\" class=\"form-text error\">Password must be minimum of 4 characters long.</small>}\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Confirm Password</label>\n              <input type=\"text\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\n              {formData.confirmPassword && !formData.isPasswordMatch && <small id=\"emailHelp\" class=\"form-text error\">Password does not match.</small>}\n            </div>\n            <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={ formData.disableButton } onClick={ handleResetPasswordSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Reset Password</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ResetPassword;","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/forgot-password/index.js",["93","94","95","96"],"import React, { useRef, useState, useEffect } from 'react'\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\nimport NotificationToast from '../../components/notification-alert'\nimport { authentication } from '../../mixins/api'\nimport { Link, Redirect } from 'react-router-dom'\nimport { checkEmailIsValid } from '../../utils/validator'\n\nfunction ForgotPassword() {\n  const firstRender = useRef(true)\n    \n  const [formData, setFormData] = useState({\n    email: \"\",\n    errorMessage: \"\",\n    successMessage: \"\",\n    disableButton: true,\n    isEmailValid: false,\n    isLoading: false\n  })\n\n  const updateFormData = e => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  const formValidation = () => {\n    if(formData.email) {\n      return false;\n    }else{\n      return true\n    }\n  }\n\n  const handleForgotPasswordSubmission = async () => {\n    setFormData(prevState => ({...prevState, errorMessage: '', disableButton: true, isLoading: true}))\n    const forgotPasswordFormData = {\n        email: formData.email\n    }\n    const forgotPasswordResponseObj = await authentication.forgotPassword(forgotPasswordFormData)\n    const { status, response } = forgotPasswordResponseObj\n    if(status === SUCCESS_STATUS) {\n\n    }else{\n      setFormData(prevState => ({...prevState, errorMessage: response, disableButton: false, isLoading: false}))\n    }\n  }\n\n  useEffect(() => {\n    if(firstRender.current) {\n      firstRender.current = false\n      return\n    }\n\n    setFormData(prevState => ({ \n      ...prevState, \n      disableButton: formValidation() || !checkEmailIsValid(formData.email),\n      isEmailValid: checkEmailIsValid(formData.email)\n    }))\n  }, [formData.email])\n\n  return (\n    <div class=\"container h-100 forgot-password\">\n      <div class=\"row h-100 justify-content-center align-items-center\">\n        <div class=\"col-lg-offset-3 col-lg-4 col-lg-offset-3\">\n          <img src=\"../../assets/images/logo.png\" />\n          <form class=\"form\" onSubmit={ handleForgotPasswordSubmission }>\n            <NotificationToast \n              successMessage={formData.successMessage}\n              errorMessage={formData.errorMessage}\n            />\n            <h3 class=\"center-text\">Forgot Password</h3>\n            <hr/>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Email Address</label>\n              <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\n              {formData.email && !formData.isEmailValid && <small id=\"emailHelp\" class=\"form-text error\">Invalid email address.</small>}\n            </div>\n            <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={ formData.disableButton } onClick={ handleForgotPasswordSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Forgot Password</button>\n            <div class=\"form-group\">\n              <Link class=\"float-right link-color\" to=\"/\">Back to login</Link>\n            </div>  \n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPassword;","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/profile/index.js",["97","98","99","100","101","102","103"],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/home/dashboard/index.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"//import logo from './logo.svg';\nimport React, { useState, useEffect, useRef } from 'react'\n\nfunction Dashboard() {\n\n  return (\n    <div class=\"wrapper\">\n    <nav id=\"sidebar\">\n        <div class=\"sidebar-header\">\n            <h3>All India Rahul Gandhi Brigade Congress</h3>\n            <hr/>\n        </div>\n\n        <ul class=\"list-unstyled components\">\n            <li class=\"active\">\n                <a href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"dropdown-toggle\">Home</a>\n                <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\">\n                    <li>\n                        <a href=\"#\">Home 1</a>\n                    </li>\n                    <li>\n                        <a href=\"#\">Home 2</a>\n                    </li>\n                    <li>\n                        <a href=\"#\">Home 3</a>\n                    </li>\n                </ul>\n            </li>\n            <li>\n                <a href=\"#\">About</a>\n            </li>\n            <li>\n                <a href=\"#pageSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"dropdown-toggle\">Pages</a>\n                <ul class=\"collapse list-unstyled\" id=\"pageSubmenu\">\n                    <li>\n                        <a href=\"#\">Page 1</a>\n                    </li>\n                    <li>\n                        <a href=\"#\">Page 2</a>\n                    </li>\n                    <li>\n                        <a href=\"#\">Page 3</a>\n                    </li>\n                </ul>\n            </li>\n            <li>\n                <a href=\"#\">Portfolio</a>\n            </li>\n            <li>\n                <a href=\"#\">Contact</a>\n            </li>\n        </ul>\n    </nav>\n    <div id=\"content\">\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div class=\"container-fluid\">\n\n                    <button type=\"button\" id=\"sidebarCollapse\" class=\"btn btn-info\">\n                        <i class=\"fas fa-align-left\"></i>\n                        <span>Toggle Sidebar</span>\n                    </button>\n                    <button class=\"btn btn-dark d-inline-block d-lg-none ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <i class=\"fas fa-align-justify\"></i>\n                    </button>\n\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul class=\"nav navbar-nav ml-auto\">\n                            {/* <li class=\"nav-item active\">\n                                <a class=\"nav-link\" href=\"#\">Page</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#\">Page</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#\">James Doe</a>\n                            </li> */}\n                            <li class=\"nav-item\">\n                            <div class=\"dropdown\">\n                                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    James Doe\n                                </button>\n                                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                    <a class=\"dropdown-item\" href=\"#\">Action</a>\n                                    <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                    <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                                </div>\n                            </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            <div class=\"row\">\n                <div class=\"col-lg-8\">\n                <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\n  <ol class=\"carousel-indicators\">\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n  </ol>\n  <div class=\"carousel-inner\">\n    <div class=\"carousel-item active\">\n      <img class=\"d-block w-100\" src=\"../../../assets/images/00-yahoo-homepage.jpg\" alt=\"First slide\" />\n    </div>\n    <div class=\"carousel-item\">\n      <img class=\"d-block w-100\" src=\"../../../assets/images/BBC News.jpg\" alt=\"Second slide\" />\n    </div>\n    <div class=\"carousel-item\">\n      <img class=\"d-block w-100\" src=\"../../../assets/images/bbc_web2.jpg\" alt=\"Third slide\" />\n    </div>\n    <div class=\"carousel-item\">\n      <img class=\"d-block w-100\" src=\"../../../assets/images/BBC News.jpg\" alt=\"Second slide\" />\n    </div>\n    <div class=\"carousel-item\">\n      <img class=\"d-block w-100\" src=\"../../../assets/images/bbc_web2.jpg\" alt=\"Third slide\" />\n    </div>\n    <div class=\"carousel-item\">\n      <img class=\"d-block w-100\" src=\"../../../assets/images/BBC News.jpg\" alt=\"Second slide\" />\n    </div>\n    <div class=\"carousel-item\">\n      <img class=\"d-block w-100\" src=\"../../../assets/images/bbc_web2.jpg\" alt=\"Third slide\" />\n    </div>\n  </div>\n  <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Previous</span>\n  </a>\n  <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Next</span>\n  </a>\n</div>\n                </div>\n                <div class=\"col-lg-4 static-news\">\n                <div class=\"row\">\n                    <div class=\"col-lg-5\">\n                    <img class=\"d-block w-100\" src=\"../../../assets/images/logo.png\" style={{height: '105px'}} alt=\"First slide\" />\n                    </div>\n                    <div class=\"col-lg-7\">\n                        <article>Business</article>\n                        <p>\n                            <strong>Mauris porta quam a lorem honcus</strong><br/>\n                            <small>December 8, 2020</small>\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-5\">\n                    <img class=\"d-block w-100\" src=\"../../../assets/images/logo.png\" style={{height: '105px'}} alt=\"First slide\" />\n                    </div>\n                    <div class=\"col-lg-7\">\n                        <article>Environmental</article>\n                        <p>\n                            <strong>Mauris porta quam a lorem honcus</strong><br/>\n                            <small>December 8, 2020</small>\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-5\">\n                    <img class=\"d-block w-100\" src=\"../../../assets/images/logo.png\" style={{height: '105px'}} alt=\"First slide\" />\n                    </div>\n                    <div class=\"col-lg-7\">\n                        <article>Video</article>\n                        <p>\n                            <strong>Mauris porta quam a lorem honcus</strong><br/>\n                            <small>December 8, 2020</small>\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-5\">\n                    <img class=\"d-block w-100\" src=\"../../../assets/images/logo.png\" style={{height: '105px'}} alt=\"First slide\" />\n                    </div>\n                    <div class=\"col-lg-7\">\n                        <article>Design</article>\n                        <p>\n                            <strong>Mauris porta quam a lorem honcus</strong><br/>\n                            <small>December 8, 2020</small>\n                        </p>\n                    </div>\n                </div>\n                <h6>MORE TRENDING POSTS</h6>\n                </div>\n                \n            </div>\n    </div>\n\n</div>\n\n  );\n}\n\nexport default Dashboard;\n","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/landing-page/index.js",["119","120","121","122"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { authentication } from '../../mixins/api'\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\nimport NotificationToast from '../../components/notification-alert'\nimport { stripHyphenFromString } from '../../utils/helper'\nimport { checkPhoneIsValid, checkPasswordIsValid } from '../../utils/validator'\nimport { saveData } from '../../utils/storage'\n\nfunction LandingPage(props) {\n\n  const firstRender = useRef(true)\n  const [showLoginScreen, setShowLoginScreen] = useState(true)\n  const [showRegisterScreen, setShowRegisterScreen] = useState(false)\n  const [showOtpScreen, setShowOtpScreen] = useState(false)\n  const [formData, setFormData] = useState({\n    loginUsername: '',\n    loginPassword: '',\n    registerUsername: '',\n    registerPassword: '',\n    errorMessage: '',\n    successMessage: '',\n    otp: '',\n    disableLoginButton: true,\n    disableRegisterButton: true,\n    disableOtpButton: false,\n    redirect: false,\n    isLoading: false,\n    isLoginUsernameValid: false,\n    isRegisterUsernameValid: false,\n    isPasswordValid: false,\n  })\n\n  const onRegisterLinkClick = () => {\n    setFormData(prevState => ({...prevState, errorMessage: null}))\n    setShowRegisterScreen(true)\n    setShowOtpScreen(false)\n    setShowLoginScreen(false)\n  }\n  const onLoginLinkClick = () =>  {\n    setFormData(prevState => ({...prevState, errorMessage: null}))\n    setShowRegisterScreen(false)\n    setShowLoginScreen(true)\n    setShowOtpScreen(false)\n  }\n\n  const updateFormData = e => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  const loginFormValidation = () => {\n    if(formData.loginUsername && formData.loginPassword) {\n      return false;\n    }else{\n      return true\n    }\n  }\n\n  const registerFormValidation = () => {\n    if(formData.registerUsername && formData.registerPassword) {\n      return false;\n    }else{\n      return true\n    }\n  }\n\n  const handleLoginFormSubmission = async (e) => {\n    e.preventDefault()\n    setFormData(prevState => ({...prevState, errorMessage: '', disableLoginButton: true, isLoading: true}))\n    const loginFormData = {\n      password: formData.loginPassword,\n      phoneNumber: stripHyphenFromString(formData.loginUsername)\n    }\n    const loginResponseObj = await authentication.loginUser(loginFormData)\n    const { status, response } = loginResponseObj\n    if(status === SUCCESS_STATUS) {\n\n    }else{\n      const errorMessage = response\n      setFormData(prevState => ({...prevState, errorMessage: errorMessage, disableLoginButton: false, isLoading: false}))\n    }\n  }\n\n  const handleRegisterFormSubmission = async (e) => {\n    setFormData(prevState => ({...prevState, errorMessage: '', disableRegisterButton: true, isLoading: true}))\n    const registerFormData = {\n      password: formData.registerPassword,\n      phoneNumber: stripHyphenFromString(formData.registerUsername)\n    }\n    saveData(\"userInfo\", JSON.stringify(registerFormData))\n    const registerResponseObj = await authentication.registerUser(registerFormData)\n    const { status, response } = registerResponseObj\n    if(status === SUCCESS_STATUS) {\n      setShowOtpScreen(true)\n      setShowRegisterScreen(false)\n      setShowLoginScreen(false)\n      //saveData(\"userInfo\", JSON.stringify(registerFormData))\n    }else{\n      const errorMessage = response\n      setFormData(prevState => ({...prevState, errorMessage: errorMessage, disableRegisterButton: false, isLoading: false}))\n    }\n  }\n\n  const handleSendOtp = async (e) => {\n    setFormData(prevState => ({...prevState, errorMessage: '', disableRegisterButton: true}))\n    const sendOtpResponseObj = await authentication.sendOtp(formData.registerUsername)\n    const { status, response } = sendOtpResponseObj\n    if(status === SUCCESS_STATUS) {\n      setFormData(prevState => ({...prevState, successMessage: \"OTP sent successfully\"}))\n    }else{\n      setFormData(prevState => ({...prevState, errorMessage: response.error}))\n    }\n  }\n\n  const handleOtpVerification = async (e) => {\n    setFormData(prevState => ({...prevState, errorMessage: '', disableOtpButton: true, isLoading: true}))\n    const verifyOtpFormData = {\n      otp: formData.otp,\n      sessionId: '23434434'\n    }\n    const verifyOtpResponseObj = await authentication.verifyOtp(verifyOtpFormData)\n    const { status, response } = verifyOtpResponseObj\n    if(status === SUCCESS_STATUS) {\n      setFormData(prevState => ({...prevState, redirect: true}))\n      props.history.push(\"/profile\");\n    }else{\n      setFormData(prevState => ({...prevState, errorMessage: response ? response.error : \"Something went wrong\", disableOtpButton: false, isLoading: false}))\n    }\n  }\n\n  useEffect(() => {\n    if(firstRender.current) {\n      firstRender.current = false\n      return\n    }\n\n    if(formData.redirect) {\n      return <Redirect to=\"profile\" />   \n    }\n      \n    setFormData(prevState => ({ \n      ...prevState, \n      disableLoginButton: loginFormValidation() || !checkPhoneIsValid(stripHyphenFromString(formData.loginUsername)), \n      disableRegisterButton: registerFormValidation() || !checkPhoneIsValid(stripHyphenFromString(formData.registerUsername)) || !checkPasswordIsValid(formData.registerPassword),\n      isLoginUsernameValid: checkPhoneIsValid(stripHyphenFromString(formData.loginUsername)),\n      isRegisterUsernameValid: checkPhoneIsValid(stripHyphenFromString(formData.registerUsername)),\n      isPasswordValid: checkPasswordIsValid(formData.registerPassword)\n    }))\n  }, [formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername])\n\n  return (\n    <div>\n      <header>\n        <div class=\"container-fluid row\">\n          <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n            <h6>Jai Congress!!</h6>\n          </div>\n          <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n            <h6 class=\"float-right\">Jay Ho Rahul Gandhi!!!</h6>\n          </div>\n        </div>\n        <h4 class=\"center-text slogan\">Join hands for the change</h4>\n        <div class=\"container-fluid row org\">\n          <div class=\"col-lg-6 col-md-6 col-sm-9 col-xs-9\">\n            <img src=\"../../assets/images/logo.png\" class=\"logo\" />\n            <span class=\"org-name\"><strong>All India Rahul Gandhi Brigade Congress</strong></span>\n          </div>\n        </div>\n        <svg viewBox=\"0 50 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -1}}> \n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FA8223'}}> </path> \n        </svg>\n        <svg viewBox=\"0 40 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -2}}> \n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FD9A24'}}> </path> \n        </svg> \n        <svg viewBox=\"0 30 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -2}}> \n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FBB124'}}> </path> \n        </svg> \n        <svg viewBox=\"0 40 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -2}}> \n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FD9A24'}}> </path> \n        </svg>\n      </header>\n      <section>\n        <div class=\"container-fluid row\">\n          <div class=\"form col-lg-4 col-md-12 col-sm-12 col-xs-12\">\n            {showLoginScreen && <form onSubmit={ handleLoginFormSubmission }> \n              <NotificationToast \n                successMessage={formData.successMessage}\n                errorMessage={formData.errorMessage}\n              />\n              <h3 style={{textAlign: 'center'}}>Existing Member</h3>\n              <hr/>\n              <div class=\"form-group\">\n                <label for=\"loginUsername\">Phone Number</label>\n                <input type=\"tel\" placeholder=\"+91-4500-67800\" pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{6}\" class=\"form-control\" id=\"loginUsername\" name=\"loginUsername\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\n                <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your details with anyone else.</small>\n                {formData.loginUsername && !formData.isLoginUsernameValid && <small id=\"emailHelp\" class=\"form-text error\">Invalid phone number.</small>}\n              </div>\n              <div class=\"form-group\">\n                <label for=\"loginPassword\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"loginPassword\" name=\"loginPassword\" onChange={updateFormData} />\n              </div>\n              <div class=\"form-group\">\n                <Link class=\"link-color\" onClick={onRegisterLinkClick}>Become a member</Link>\n                <Link class=\"float-right link-color\" to=\"/forgot-password\">Forgot Password?</Link>\n              </div>\n              <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={ formData.disableLoginButton } onClick={ handleLoginFormSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Sign In</button>\n            </form>}\n            {showRegisterScreen && <form onSubmit={ handleRegisterFormSubmission }> \n              <h3 style={{textAlign: 'center'}}>New Member</h3>\n              <NotificationToast \n                successMessage={formData.successMessage}\n                errorMessage={formData.errorMessage}\n              />\n              <hr/>\n              <div class=\"form-group\">\n                <label for=\"registerUsername\">Phone Number</label>\n                <input type=\"tel\" placeholder=\"+91-4500-67800\" pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{6}\" class=\"form-control\" id=\"registerUsername\" name=\"registerUsername\" aria-describedby=\"emailHelp\"  onChange={updateFormData}/>\n                <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your details with anyone else.</small>\n                {formData.registerUsername && !formData.isRegisterUsernameValid && <small id=\"emailHelp\" class=\"form-text error\">Invalid phone number.</small>}\n              </div>\n              <div class=\"form-group\">\n                <label for=\"registerPassword\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"registerPassword\" name=\"registerPassword\" onChange={updateFormData} />\n                {formData.registerPassword && !formData.isPasswordValid && <small id=\"emailHelp\" class=\"form-text error\">Password must be minimum of 4 characters long.</small>}\n              </div>\n              <div class=\"form-group\">\n                <Link class=\"pull-right link-color\" onClick={onLoginLinkClick}>Already a member, login</Link>\n              </div>\n              <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={formData.disableRegisterButton} onClick={ handleRegisterFormSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Become a member</button>\n            </form>}\n            {showOtpScreen && <form onSubmit={ handleOtpVerification }> \n              <h3 style={{textAlign: 'center'}}>Phone Number Verification</h3>\n              <NotificationToast \n                successMessage={formData.successMessage}\n                errorMessage={formData.errorMessage}\n              />\n              <hr/>\n              <div class=\"form-group\">\n                <label for=\"registerUsername\">OTP</label>\n                <input type=\"text\" class=\"form-control\" id=\"registerUsername\" name=\"registerUsername\" aria-describedby=\"emailHelp\"  onChange={updateFormData}/>\n              </div>\n              <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={formData.disableOtpButton} onClick={ handleOtpVerification }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Verify</button>\n              <a onClick={ handleSendOtp } class=\"pull-right link-color\">Resend OTP</a>\n            </form>}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/mixins/api.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/constants/api.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/components/notification-alert.js",["123","124","125","126"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ApiErrorHandler } from '../utils/error_handler'\n\nfunction NotificationAlert(props) {\n\n  const apiErrorHandler = new ApiErrorHandler();\n  \n  const firstRender = useRef(true)\n  useEffect(() => {\n    if(firstRender.current) {\n      firstRender.current = false\n      return\n    }\n  }, [])\n\n  return (\n    <div>\n      {props.successMessage && <div class=\"alert alert-success\" role=\"alert\">\n        <a href=\"#\" class=\"alert-link\">{`Success! ${props.successMessage}.`}</a>\n      </div>}\n      {props.errorMessage && <div class=\"alert alert-danger\" role=\"alert\">\n        <a href=\"#\" class=\"alert-link\">{`Error! ${apiErrorHandler.handleApiErrorResponse(props.errorMessage)}.`}</a>\n      </div>}\n    </div>\n  );\n}\n\nexport default NotificationAlert;\n","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/resources/authentication.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/services/api/requester.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/helper.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/validator.js",["127","128"],"export function checkPhoneIsValid (phone) {\n    if (phone.startsWith('+91') && phone.length === 13) {\n      return true\n    }\n    if (phone.startsWith('91') && phone.length === 12) {\n        return true\n      }\n    if (phone.length === 10) {\n      return true\n    }\n    return false\n}\n\nexport function checkPasswordIsValid (password) {\n    return password.length >= 4\n}\n\nexport function checkPasswordIsMatch (password, confirmPassword) {\n    return password === confirmPassword\n}\n\nexport function checkEmailIsValid (email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/storage.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/screens/error/index.js",["129","130","131","132","133"],"import React, { useRef, useState, useEffect } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\n\nfunction Error() {\n  const firstRender = useRef(true)  \n    \n  return (\n    <div class=\"container h-100 forgot-password\">\n      <div class=\"row h-100 justify-content-center align-items-center\">\n        <label class=\"error-404\">404</label>\n        <span></span>\n      </div>\n    </div>\n  );\n}\n\nexport default Error;","/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/error_handler.js",[],"/Users/babatundeojo/Desktop/Projects/Network_project/Web/network-app/src/utils/converter.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":8,"column":3,"nodeType":"140","messageId":"141","endLine":8,"endColumn":11},{"ruleId":"138","severity":1,"message":"142","line":2,"column":26,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":50,"column":6,"nodeType":"145","endLine":50,"endColumn":22,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":56,"column":11,"nodeType":"149","endLine":56,"endColumn":53},{"ruleId":"138","severity":1,"message":"142","line":2,"column":26,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"138","severity":1,"message":"139","line":5,"column":16,"nodeType":"140","messageId":"141","endLine":5,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":50,"column":6,"nodeType":"145","endLine":50,"endColumn":22,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"148","line":56,"column":11,"nodeType":"149","endLine":56,"endColumn":53},{"ruleId":"138","severity":1,"message":"151","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},{"ruleId":"138","severity":1,"message":"152","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":24},{"ruleId":"138","severity":1,"message":"142","line":5,"column":26,"nodeType":"140","messageId":"141","endLine":5,"endColumn":38},{"ruleId":"138","severity":1,"message":"153","line":67,"column":15,"nodeType":"140","messageId":"141","endLine":67,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":188,"column":6,"nodeType":"145","endLine":188,"endColumn":99,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"148","line":198,"column":11,"nodeType":"149","endLine":198,"endColumn":66},{"ruleId":"155","severity":1,"message":"156","line":219,"column":45,"nodeType":"149","endLine":219,"endColumn":122},{"ruleId":"138","severity":1,"message":"157","line":2,"column":17,"nodeType":"140","messageId":"141","endLine":2,"endColumn":25},{"ruleId":"138","severity":1,"message":"158","line":2,"column":27,"nodeType":"140","messageId":"141","endLine":2,"endColumn":36},{"ruleId":"138","severity":1,"message":"159","line":2,"column":38,"nodeType":"140","messageId":"141","endLine":2,"endColumn":44},{"ruleId":"160","severity":1,"message":"161","line":19,"column":25,"nodeType":"149","endLine":19,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":22,"column":25,"nodeType":"149","endLine":22,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":25,"column":25,"nodeType":"149","endLine":25,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":30,"column":17,"nodeType":"149","endLine":30,"endColumn":29},{"ruleId":"160","severity":1,"message":"161","line":36,"column":25,"nodeType":"149","endLine":36,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":39,"column":25,"nodeType":"149","endLine":39,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":42,"column":25,"nodeType":"149","endLine":42,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":47,"column":17,"nodeType":"149","endLine":47,"endColumn":29},{"ruleId":"160","severity":1,"message":"161","line":50,"column":17,"nodeType":"149","endLine":50,"endColumn":29},{"ruleId":"160","severity":1,"message":"161","line":83,"column":37,"nodeType":"149","endLine":83,"endColumn":71},{"ruleId":"160","severity":1,"message":"161","line":84,"column":37,"nodeType":"149","endLine":84,"endColumn":71},{"ruleId":"160","severity":1,"message":"161","line":85,"column":37,"nodeType":"149","endLine":85,"endColumn":71},{"ruleId":"138","severity":1,"message":"142","line":4,"column":26,"nodeType":"140","messageId":"141","endLine":4,"endColumn":38},{"ruleId":"143","severity":1,"message":"162","line":145,"column":6,"nodeType":"145","endLine":145,"endColumn":108,"suggestions":"163"},{"ruleId":"147","severity":1,"message":"148","line":161,"column":13,"nodeType":"149","endLine":161,"endColumn":68},{"ruleId":"160","severity":1,"message":"164","line":236,"column":15,"nodeType":"149","endLine":236,"endColumn":74},{"ruleId":"138","severity":1,"message":"157","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"151","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":17,"column":9,"nodeType":"149","endLine":17,"endColumn":40},{"ruleId":"160","severity":1,"message":"161","line":20,"column":9,"nodeType":"149","endLine":20,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":23,"column":24,"nodeType":"167","messageId":"168","endLine":23,"endColumn":25,"suggestions":"169"},{"ruleId":"165","severity":1,"message":"166","line":23,"column":49,"nodeType":"167","messageId":"168","endLine":23,"endColumn":50,"suggestions":"170"},{"ruleId":"138","severity":1,"message":"157","line":1,"column":25,"nodeType":"140","messageId":"141","endLine":1,"endColumn":33},{"ruleId":"138","severity":1,"message":"158","line":1,"column":35,"nodeType":"140","messageId":"141","endLine":1,"endColumn":44},{"ruleId":"138","severity":1,"message":"151","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":24},{"ruleId":"138","severity":1,"message":"171","line":5,"column":9,"nodeType":"140","messageId":"141","endLine":5,"endColumn":20},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ERROR_STATUS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formValidation'. Either include it or remove the dependency array.","ArrayExpression",["174"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["175"],"'Link' is defined but never used.","'SUCCESS_STATUS' is defined but never used.","'result' is assigned a value but never used.",["176"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'formData', 'loginFormValidation', and 'registerFormValidation'. Either include them or remove the dependency array.",["177"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["178","179"],["180","181"],"'firstRender' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"messageId":"189","fix":"190","desc":"191"},{"messageId":"192","fix":"193","desc":"194"},{"messageId":"189","fix":"195","desc":"191"},{"messageId":"192","fix":"196","desc":"194"},"Update the dependencies array to be: [formData.email, formValidation]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [formData.email, formData.firstName, formData.lastName, formData.phoneNumber, formValidation]",{"range":"200","text":"201"},"Update the dependencies array to be: [formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername, formData, loginFormValidation, registerFormValidation]",{"range":"202","text":"203"},"removeEscape",{"range":"204","text":"205"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"206","text":"207"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"208","text":"205"},{"range":"209","text":"207"},[1468,1484],"[formData.email, formValidation]",[1434,1450],[5732,5825],"[formData.email, formData.firstName, formData.lastName, formData.phoneNumber, formValidation]",[5123,5225],"[formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername, formData, loginFormValidation, registerFormValidation]",[548,549],"",[548,548],"\\",[573,574],[573,573]]