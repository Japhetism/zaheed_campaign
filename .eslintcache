[{"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\index.js":"1","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\App.js":"2","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\reportWebVitals.js":"3","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\forgot-password\\index.js":"4","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\profile\\index.js":"5","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\landing-page\\index.js":"6","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\home\\dashboard\\index.js":"7","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\constants\\api.js":"8","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\mixins\\api.js":"9","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\components\\notification-alert.js":"10","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\services\\api\\resources\\authentication.js":"11","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\services\\api\\requester.js":"12","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\reset-password\\index.js":"13","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\error_handler.js":"14","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\helper.js":"15","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\validator.js":"16","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\error\\index.js":"17","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\storage.js":"18"},{"size":517,"mtime":1608602474268,"results":"19","hashOfConfig":"20"},{"size":1126,"mtime":1608613347449,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1607520370554,"results":"22","hashOfConfig":"20"},{"size":3217,"mtime":1608599689014,"results":"23","hashOfConfig":"20"},{"size":18923,"mtime":1608617840262,"results":"24","hashOfConfig":"20"},{"size":12329,"mtime":1608615270391,"results":"25","hashOfConfig":"20"},{"size":9387,"mtime":1610170342465,"results":"26","hashOfConfig":"20"},{"size":226,"mtime":1607520370441,"results":"27","hashOfConfig":"20"},{"size":127,"mtime":1607520370538,"results":"28","hashOfConfig":"20"},{"size":876,"mtime":1608594564634,"results":"29","hashOfConfig":"20"},{"size":1523,"mtime":1608599759162,"results":"30","hashOfConfig":"20"},{"size":3705,"mtime":1607520370692,"results":"31","hashOfConfig":"20"},{"size":4035,"mtime":1608613222529,"results":"32","hashOfConfig":"20"},{"size":1182,"mtime":1608595478873,"results":"33","hashOfConfig":"20"},{"size":82,"mtime":1608596027467,"results":"34","hashOfConfig":"20"},{"size":767,"mtime":1608599931015,"results":"35","hashOfConfig":"20"},{"size":440,"mtime":1608613878470,"results":"36","hashOfConfig":"20"},{"size":255,"mtime":1608614605635,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"18rjnjm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\index.js",[],["83","84"],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\App.js",["85"],"// import logo from './logo.svg';\r\n// import './App.css';\r\nimport React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport LandingPageScreen from './screens/landing-page'\r\nimport ProfileScreen from './screens/profile'\r\nimport ForgotPasswordScreen from './screens/forgot-password'\r\nimport DashboardScreen from './screens/home/dashboard'\r\nimport ResetPasswordScreen from './screens/reset-password'\r\nimport ErrorScreen from './screens/error'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n          <Route exact path=\"/\" component={LandingPageScreen} />\r\n          <Route exact path=\"/login\" component={LandingPageScreen} />\r\n          <Route exact path=\"/profile\" component={ProfileScreen} />\r\n          <Route exact path=\"/forgot-password\" component={ForgotPasswordScreen} />\r\n          <Route exact path=\"/reset-password/:token\" component={ResetPasswordScreen} />\r\n          <Route exact path=\"/home\" component={DashboardScreen} />\r\n          <Route component={ErrorScreen} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\reportWebVitals.js",[],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\forgot-password\\index.js",["86","87","88","89"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\r\nimport NotificationToast from '../../components/notification-alert'\r\nimport { authentication } from '../../mixins/api'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { checkEmailIsValid } from '../../utils/validator'\r\n\r\nfunction ForgotPassword() {\r\n  const firstRender = useRef(true)\r\n    \r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    errorMessage: \"\",\r\n    successMessage: \"\",\r\n    disableButton: true,\r\n    isEmailValid: false,\r\n    isLoading: false\r\n  })\r\n\r\n  const updateFormData = e => {\r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const formValidation = () => {\r\n    if(formData.email) {\r\n      return false;\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  const handleForgotPasswordSubmission = async () => {\r\n    setFormData(prevState => ({...prevState, errorMessage: '', disableButton: true, isLoading: true}))\r\n    const forgotPasswordFormData = {\r\n        email: formData.email\r\n    }\r\n    const forgotPasswordResponseObj = await authentication.forgotPassword(forgotPasswordFormData)\r\n    const { status, response } = forgotPasswordResponseObj\r\n    if(status === SUCCESS_STATUS) {\r\n\r\n    }else{\r\n      setFormData(prevState => ({...prevState, errorMessage: response, disableButton: false, isLoading: false}))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(firstRender.current) {\r\n      firstRender.current = false\r\n      return\r\n    }\r\n\r\n    setFormData(prevState => ({ \r\n      ...prevState, \r\n      disableButton: formValidation() || !checkEmailIsValid(formData.email),\r\n      isEmailValid: checkEmailIsValid(formData.email)\r\n    }))\r\n  }, [formData.email])\r\n\r\n  return (\r\n    <div class=\"container h-100 forgot-password\">\r\n      <div class=\"row h-100 justify-content-center align-items-center\">\r\n        <div class=\"col-lg-offset-3 col-lg-4 col-lg-offset-3\">\r\n          <img src=\"../../assets/images/logo.png\" />\r\n          <form class=\"form\" onSubmit={ handleForgotPasswordSubmission }>\r\n            <NotificationToast \r\n              successMessage={formData.successMessage}\r\n              errorMessage={formData.errorMessage}\r\n            />\r\n            <h3 class=\"center-text\">Forgot Password</h3>\r\n            <hr/>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email Address</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\r\n              {formData.email && !formData.isEmailValid && <small id=\"emailHelp\" class=\"form-text error\">Invalid email address.</small>}\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={ formData.disableButton } onClick={ handleForgotPasswordSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Forgot Password</button>\r\n            <div class=\"form-group\">\r\n              <Link class=\"float-right link-color\" to=\"/\">Back to login</Link>\r\n            </div>  \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\profile\\index.js",["90","91","92","93","94","95","96"],"import logo from '../../assets/images/logo.png'\r\nimport axios from 'axios'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\r\nimport NotificationToast from '../../components/notification-alert'\r\nimport { retrieveStoredData } from '../../utils/storage'\r\nimport Salutations from '../../fixtures/salutations.json'\r\nimport AccountTypes from '../../fixtures/account-types.json'\r\nimport BloodGroups from '../../fixtures/blood-groups.json'\r\nimport Sex from '../../fixtures/sex.json'\r\nimport Cities from '../../fixtures/cities.json'\r\nimport States from '../../fixtures/states.json'\r\n\r\nfunction Profile() {\r\n  const loadScript = (src) => {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n          resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n          resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    }); \r\n  }\r\n\r\n  const displayRazorpay = async () => {\r\n    let errorMessage = \"\"\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      errorMessage = \"Razorpay failed to load. Check your network connectivity\"\r\n      alert(errorMessage)\r\n      setFormData({...formData, errorMessage: errorMessage})\r\n      return;\r\n    }\r\n    const result = await axios.post(\"http://localhost:5000/payment/orders\");\r\n    if (!result) {\r\n      errorMessage = \"An error occurred, please try again\"\r\n      alert(errorMessage)\r\n      setFormData({...formData, errorMessage: errorMessage})\r\n      return;\r\n    }\r\n    const { amount, id: order_id, currency } = result.data;\r\n    const options = {\r\n      key: \"rzp_test_77JPgUqaflqdlE\", // Enter the Key ID generated from the Dashboard\r\n      amount: amount.toString(),\r\n      currency: currency,\r\n      name: \"Brigade Congress.\",\r\n      description: \"Test Transaction\",\r\n      image: { logo },\r\n      order_id: order_id,\r\n      handler: async function (response) {\r\n        const data = {\r\n          orderCreationId: order_id,\r\n          razorpayPaymentId: response.razorpay_payment_id,\r\n          razorpayOrderId: response.razorpay_order_id,\r\n          razorpaySignature: response.razorpay_signature,\r\n        };\r\n        const result = await axios.post(\"http://localhost:5000/payment/success\", data);\r\n      },\r\n      prefill: {\r\n        name: `${formData.firstName} ${formData.lastName}`,\r\n        email: `${formData.email}`,\r\n        contact: `${formData.phoneNumber}`,\r\n      },\r\n      notes: {\r\n        address: `${formData.houseNumber}, ${formData.buildingName}, ${formData.street}, ${formData.city}`,\r\n      },\r\n      theme: {\r\n        color: \"#FA8223\",\r\n      },\r\n    };\r\n    const paymentObject = new window.Razorpay(options);\r\n    paymentObject.open();\r\n  }\r\n\r\n  const firstRender = useRef(true)\r\n  const [redirectToLogin, setRedirectToLogin] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    aadharOrPAN: \"\",\r\n    accountType: \"\",\r\n    address: \"\",\r\n    bloodGroup: \"\",\r\n    category: \"\",\r\n    dateOfBirth: \"\",\r\n    // domain: [\r\n    //   {\r\n    //     \"domainType\": {\r\n    //       \"domains\": [\r\n    //         null\r\n    //       ],\r\n    //       \"id\": 0,\r\n    //       \"name\": \"string\",\r\n    //       \"permissions\": [\r\n    //         {\r\n    //           \"description\": \"string\",\r\n    //           \"enabled\": true,\r\n    //           \"id\": 0,\r\n    //           \"name\": \"string\"\r\n    //         }\r\n    //       ]\r\n    //     },\r\n    //     \"enabled\": true,\r\n    //     \"id\": 0,\r\n    //     \"name\": \"string\",\r\n    //     \"persons\": [\r\n    //       null\r\n    //     ]\r\n    //   }\r\n    // ],\r\n    email: \"\",\r\n    fatherOrHusbandsName: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n    phoneNumber: \"\",\r\n    profilePhoto: \"\",\r\n    qualification: \"\",\r\n    referrer: 0,\r\n    saluation: \"\",\r\n    sex: \"\",\r\n    subscription: \"\",\r\n    // subscription\": {\r\n    //   \"end\": \"2020-12-07T16:39:49.778Z\",\r\n    //   \"id\": 0,\r\n    //   \"start\": \"2020-12-07T16:39:49.779Z\",\r\n    //   \"subscriptionType\": {\r\n    //     \"amount\": 0,\r\n    //     \"description\": \"string\",\r\n    //     \"duration\": \"string\",\r\n    //     \"id\": 0,\r\n    //     \"name\": \"string\",\r\n    //     \"subscriptions\": [\r\n    //       null\r\n    //     ]\r\n    //   }\r\n    // },\r\n    title: \"\",\r\n    disablePaymentButton: true,\r\n    successMessage: null,\r\n    errorMessage: null\r\n  })\r\n\r\n  const updateFormData = e => {\r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const encodeImageFileAsURL = (element) => {\r\n    var file = element.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onloadend = function() {\r\n      setFormData({...formData, profilePhoto: reader.result})\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  const formValidation = () => {\r\n    if(formData.firstName && formData.lastName && formData.email && formData.phoneNumber) {\r\n      return false;\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(firstRender.current) {\r\n      const retrievedUserInfo = JSON.parse(retrieveStoredData(\"userInfo\"))\r\n      if(!retrievedUserInfo) {\r\n        setRedirectToLogin(true)\r\n      }else{\r\n        setFormData(prevState => ({ ...prevState, phoneNumber: retrievedUserInfo.phoneNumber}))\r\n      }\r\n      firstRender.current = false\r\n      return\r\n    }\r\n    \r\n    setFormData(prevState => ({ ...prevState, disablePaymentButton: formValidation()}))\r\n  }, [formData.email, formData.firstName, formData.lastName, formData.email, formData.phoneNumber])\r\n\r\n  if(redirectToLogin) {\r\n    return <Redirect to=\"/login\" />\r\n  }\r\n\r\n  return (\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-10\">\r\n          <img src=\"../../assets/images/logo.png\" class=\"logo\" />\r\n          <span class=\"header-title\">All India Rahul Gandhi Brigade Congress</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"container-fluid profile-title row\">\r\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <span>Profile Information</span>\r\n        </div>\r\n      </div>\r\n      <NotificationToast \r\n        successMessage={formData.successMessage}\r\n        errorMessage={formData.errorMessage}\r\n      />\r\n      <div class=\"container h-100\">\r\n        <div class=\"row h-100 justify-content-center align-items-center\">\r\n          <div class=\"col-lg-offset-2 col-lg-10 col-lg-offset-2\">\r\n            <form class=\"form\">\r\n              <h3 style={{textAlign: 'center'}}>Biodata</h3>\r\n              <hr/>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  {formData.profilePhoto && <img src={formData.profilePhoto} class=\"profile-photo\" alt=\"profile-photo\" />}\r\n                  <input type=\"file\" id=\"actual-btn\" style={{display: 'none'}} onChange={ event => encodeImageFileAsURL(event) }/><br/>\r\n                  <label class=\"profile-label\" for=\"actual-btn\">Profile Photo</label>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Salutation</label>\r\n                  <select class=\"form-control\" id=\"salutation\" name=\"salutation\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                    {Salutations.map(value=><option value={value.value}>{value.name}</option>)}\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">First Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"firstName\"  name=\"firstName\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Middle Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"middleName\" name=\"middleName\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Last Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Father/Husband Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"fatherOrHusbandName\" name=\"fatherOrHusbandName\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Email</label>\r\n                  <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Phone Number</label>\r\n                  <input type=\"tel\" placeholder=\"+91-4500-67800\" pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{6}\" defaultValue={formData.phoneNumber} class=\"form-control\" id=\"phoneNumber\" name=\"phoneNumber\" aria-describedby=\"emailHelp\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Password</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"password\" name=\"password\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Account Type</label>\r\n                  <select class=\"form-control\" id=\"accountType\" name=\"accountType\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                    {AccountTypes.map(value=><option value={value.value}>{value.name}</option>)}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Blood Group</label>\r\n                  <select type=\"text\" class=\"form-control\" id=\"bloodGroup\" name=\"bloodGroup\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                    {BloodGroups.map(value=><option value={value.value}>{value.name}</option>)}\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Sex</label>\r\n                  <select class=\"form-control\" id=\"sex\" name=\"sex\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                    {Sex.map(value=><option value={value.value}>{value.name}</option>)}\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Date of Birth</label>\r\n                  <input type=\"date\" class=\"form-control\" id=\"dateOfBirth\" name=\"dateOfBirth\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">House Number</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"houseNumber\" name=\"houseNumber\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Building Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"buildingName\" name=\"buildingName\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Street</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"street\" name=\"street\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">City/Town</label>\r\n                  <select class=\"form-control\" id=\"city\" name=\"city\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                    {Cities.map(value=><option value={value.name}>{value.name}</option>)}\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Pincode</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"pinCode\" name=\"pinCode\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Taluk</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"taluk\" name=\"taluk\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">District</label>\r\n                  <select class=\"form-control\" id=\"district\" name=\"district\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                  </select>\r\n                </div>  \r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">State</label>\r\n                  <select class=\"form-control\" id=\"state\" name=\"state\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                    {States.map(value=><option value={value.val}>{value.val}</option>)}\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Country</label>\r\n                  <select class=\"form-control\" id=\"country\" name=\"country\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                    <option value=\"India\">India</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Qualification</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"qualification\" name=\"qualification\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>  \r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Aadhar/PAN Card</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"aadharOrPAN\" name=\"aadharOrPAN\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Lok Sabha</label>\r\n                  <select class=\"form-control\" id=\"lokSabha\" name=\"lokSabha\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Assembly</label>\r\n                  <select class=\"form-control\" id=\"assembly\" name=\"assembly\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Ward</label>\r\n                  <select class=\"form-control\" id=\"ward\" name=\"ward\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Polling Booth</label>\r\n                  <select class=\"form-control\" id=\"pollingBooth\" name=\"pollingBooth\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Category</label>\r\n                  <select class=\"form-control\" id=\"category\" name=\"category\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Subscription Type</label>\r\n                  <select class=\"form-control\" id=\"subscription\" name=\"subscription\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}>\r\n                    <option>Select</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"exampleInputEmail1\">Identification Card</label>\r\n                  <input type=\"file\" class=\"form-control\" id=\"identificationCard\" name=\"identificationCard\" aria-describedby=\"emailHelp\" placeholder=\"\" onChange={updateFormData}/>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-9 col-md-9 col-sm-12 col-xs-12\">\r\n                  <button type=\"button\" class=\"btn btn-default-color\">Save</button>\r\n                </div>\r\n                <div class=\"col-lg-3 col-md-3 col-sm-12 col-xs-12 payment-button\">\r\n                  <button type=\"button\" onClick={ displayRazorpay } class=\"btn btn-default-color\" disabled={formData.disablePaymentButton}>Proceed to Payment</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\landing-page\\index.js",["97","98","99","100"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { authentication } from '../../mixins/api'\r\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\r\nimport NotificationToast from '../../components/notification-alert'\r\nimport { stripHyphenFromString } from '../../utils/helper'\r\nimport { checkPhoneIsValid, checkPasswordIsValid } from '../../utils/validator'\r\nimport { saveData } from '../../utils/storage'\r\n\r\nfunction LandingPage(props) {\r\n\r\n  const firstRender = useRef(true)\r\n  const [showLoginScreen, setShowLoginScreen] = useState(true)\r\n  const [showRegisterScreen, setShowRegisterScreen] = useState(false)\r\n  const [showOtpScreen, setShowOtpScreen] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    loginUsername: '',\r\n    loginPassword: '',\r\n    registerUsername: '',\r\n    registerPassword: '',\r\n    errorMessage: '',\r\n    successMessage: '',\r\n    otp: '',\r\n    disableLoginButton: true,\r\n    disableRegisterButton: true,\r\n    disableOtpButton: false,\r\n    redirect: false,\r\n    isLoading: false,\r\n    isLoginUsernameValid: false,\r\n    isRegisterUsernameValid: false,\r\n    isPasswordValid: false,\r\n  })\r\n\r\n  const onRegisterLinkClick = () => {\r\n    setFormData(prevState => ({...prevState, errorMessage: null}))\r\n    setShowRegisterScreen(true)\r\n    setShowOtpScreen(false)\r\n    setShowLoginScreen(false)\r\n  }\r\n  const onLoginLinkClick = () =>  {\r\n    setFormData(prevState => ({...prevState, errorMessage: null}))\r\n    setShowRegisterScreen(false)\r\n    setShowLoginScreen(true)\r\n    setShowOtpScreen(false)\r\n  }\r\n\r\n  const updateFormData = e => {\r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const loginFormValidation = () => {\r\n    if(formData.loginUsername && formData.loginPassword) {\r\n      return false;\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  const registerFormValidation = () => {\r\n    if(formData.registerUsername && formData.registerPassword) {\r\n      return false;\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  const handleLoginFormSubmission = async (e) => {\r\n    e.preventDefault()\r\n    setFormData(prevState => ({...prevState, errorMessage: '', disableLoginButton: true, isLoading: true}))\r\n    const loginFormData = {\r\n      password: formData.loginPassword,\r\n      phoneNumber: stripHyphenFromString(formData.loginUsername)\r\n    }\r\n    const loginResponseObj = await authentication.loginUser(loginFormData)\r\n    const { status, response } = loginResponseObj\r\n    if(status === SUCCESS_STATUS) {\r\n\r\n    }else{\r\n      const errorMessage = response\r\n      setFormData(prevState => ({...prevState, errorMessage: errorMessage, disableLoginButton: false, isLoading: false}))\r\n    }\r\n  }\r\n\r\n  const handleRegisterFormSubmission = async (e) => {\r\n    setFormData(prevState => ({...prevState, errorMessage: '', disableRegisterButton: true, isLoading: true}))\r\n    const registerFormData = {\r\n      password: formData.registerPassword,\r\n      phoneNumber: stripHyphenFromString(formData.registerUsername)\r\n    }\r\n    saveData(\"userInfo\", JSON.stringify(registerFormData))\r\n    const registerResponseObj = await authentication.registerUser(registerFormData)\r\n    const { status, response } = registerResponseObj\r\n    if(status === SUCCESS_STATUS) {\r\n      setShowOtpScreen(true)\r\n      setShowRegisterScreen(false)\r\n      setShowLoginScreen(false)\r\n      //saveData(\"userInfo\", JSON.stringify(registerFormData))\r\n    }else{\r\n      const errorMessage = response\r\n      setFormData(prevState => ({...prevState, errorMessage: errorMessage, disableRegisterButton: false, isLoading: false}))\r\n    }\r\n  }\r\n\r\n  const handleSendOtp = async (e) => {\r\n    setFormData(prevState => ({...prevState, errorMessage: '', disableRegisterButton: true}))\r\n    const sendOtpResponseObj = await authentication.sendOtp(formData.registerUsername)\r\n    const { status, response } = sendOtpResponseObj\r\n    if(status === SUCCESS_STATUS) {\r\n      setFormData(prevState => ({...prevState, successMessage: \"OTP sent successfully\"}))\r\n    }else{\r\n      setFormData(prevState => ({...prevState, errorMessage: response.error}))\r\n    }\r\n  }\r\n\r\n  const handleOtpVerification = async (e) => {\r\n    setFormData(prevState => ({...prevState, errorMessage: '', disableOtpButton: true, isLoading: true}))\r\n    const verifyOtpFormData = {\r\n      otp: formData.otp,\r\n      sessionId: '23434434'\r\n    }\r\n    const verifyOtpResponseObj = await authentication.verifyOtp(verifyOtpFormData)\r\n    const { status, response } = verifyOtpResponseObj\r\n    if(status === SUCCESS_STATUS) {\r\n      setFormData(prevState => ({...prevState, redirect: true}))\r\n      props.history.push(\"/profile\");\r\n    }else{\r\n      setFormData(prevState => ({...prevState, errorMessage: response ? response.error : \"Something went wrong\", disableOtpButton: false, isLoading: false}))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(firstRender.current) {\r\n      firstRender.current = false\r\n      return\r\n    }\r\n\r\n    if(formData.redirect) {\r\n      return <Redirect to=\"profile\" />   \r\n    }\r\n      \r\n    setFormData(prevState => ({ \r\n      ...prevState, \r\n      disableLoginButton: loginFormValidation() || !checkPhoneIsValid(stripHyphenFromString(formData.loginUsername)), \r\n      disableRegisterButton: registerFormValidation() || !checkPhoneIsValid(stripHyphenFromString(formData.registerUsername)) || !checkPasswordIsValid(formData.registerPassword),\r\n      isLoginUsernameValid: checkPhoneIsValid(stripHyphenFromString(formData.loginUsername)),\r\n      isRegisterUsernameValid: checkPhoneIsValid(stripHyphenFromString(formData.registerUsername)),\r\n      isPasswordValid: checkPasswordIsValid(formData.registerPassword)\r\n    }))\r\n  }, [formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername])\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div class=\"container-fluid row\">\r\n          <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n            <h6>Jai Congress!!</h6>\r\n          </div>\r\n          <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n            <h6 class=\"float-right\">Jay Ho Rahul Gandhi!!!</h6>\r\n          </div>\r\n        </div>\r\n        <h4 class=\"center-text slogan\">Join hands for the change</h4>\r\n        <div class=\"container-fluid row org\">\r\n          <div class=\"col-lg-6 col-md-6 col-sm-9 col-xs-9\">\r\n            <img src=\"../../assets/images/logo.png\" class=\"logo\" />\r\n            <span class=\"org-name\"><strong>All India Rahul Gandhi Brigade Congress</strong></span>\r\n          </div>\r\n        </div>\r\n        <svg viewBox=\"0 50 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -1}}> \r\n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FA8223'}}> </path> \r\n        </svg>\r\n        <svg viewBox=\"0 40 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -2}}> \r\n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FD9A24'}}> </path> \r\n        </svg> \r\n        <svg viewBox=\"0 30 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -2}}> \r\n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FBB124'}}> </path> \r\n        </svg> \r\n        <svg viewBox=\"0 40 500 500\" preserveAspectRatio=\"xMinYMin meet\" style={{zIndex: -2}}> \r\n          <path d=\"M0, 100 C150, 200 350, 0 500, 100 L500, 00 L0, 0 Z\" style={{stroke: 'none', fill: '#FD9A24'}}> </path> \r\n        </svg>\r\n      </header>\r\n      <section>\r\n        <div class=\"container-fluid row\">\r\n          <div class=\"form col-lg-4 col-md-12 col-sm-12 col-xs-12\">\r\n            {showLoginScreen && <form onSubmit={ handleLoginFormSubmission }> \r\n              <NotificationToast \r\n                successMessage={formData.successMessage}\r\n                errorMessage={formData.errorMessage}\r\n              />\r\n              <h3 style={{textAlign: 'center'}}>Existing Member</h3>\r\n              <hr/>\r\n              <div class=\"form-group\">\r\n                <label for=\"loginUsername\">Phone Number</label>\r\n                <input type=\"tel\" placeholder=\"+91-4500-67800\" pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{6}\" class=\"form-control\" id=\"loginUsername\" name=\"loginUsername\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\r\n                <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your details with anyone else.</small>\r\n                {formData.loginUsername && !formData.isLoginUsernameValid && <small id=\"emailHelp\" class=\"form-text error\">Invalid phone number.</small>}\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"loginPassword\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"loginPassword\" name=\"loginPassword\" onChange={updateFormData} />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <Link class=\"link-color\" onClick={onRegisterLinkClick}>Become a member</Link>\r\n                <Link class=\"float-right link-color\" to=\"/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n              <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={ formData.disableLoginButton } onClick={ handleLoginFormSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Sign In</button>\r\n            </form>}\r\n            {showRegisterScreen && <form onSubmit={ handleRegisterFormSubmission }> \r\n              <h3 style={{textAlign: 'center'}}>New Member</h3>\r\n              <NotificationToast \r\n                successMessage={formData.successMessage}\r\n                errorMessage={formData.errorMessage}\r\n              />\r\n              <hr/>\r\n              <div class=\"form-group\">\r\n                <label for=\"registerUsername\">Phone Number</label>\r\n                <input type=\"tel\" placeholder=\"+91-4500-67800\" pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{6}\" class=\"form-control\" id=\"registerUsername\" name=\"registerUsername\" aria-describedby=\"emailHelp\"  onChange={updateFormData}/>\r\n                <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your details with anyone else.</small>\r\n                {formData.registerUsername && !formData.isRegisterUsernameValid && <small id=\"emailHelp\" class=\"form-text error\">Invalid phone number.</small>}\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"registerPassword\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"registerPassword\" name=\"registerPassword\" onChange={updateFormData} />\r\n                {formData.registerPassword && !formData.isPasswordValid && <small id=\"emailHelp\" class=\"form-text error\">Password must be minimum of 4 characters long.</small>}\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <Link class=\"pull-right link-color\" onClick={onLoginLinkClick}>Already a member, login</Link>\r\n              </div>\r\n              <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={formData.disableRegisterButton} onClick={ handleRegisterFormSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Become a member</button>\r\n            </form>}\r\n            {showOtpScreen && <form onSubmit={ handleOtpVerification }> \r\n              <h3 style={{textAlign: 'center'}}>Phone Number Verification</h3>\r\n              <NotificationToast \r\n                successMessage={formData.successMessage}\r\n                errorMessage={formData.errorMessage}\r\n              />\r\n              <hr/>\r\n              <div class=\"form-group\">\r\n                <label for=\"registerUsername\">OTP</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"registerUsername\" name=\"registerUsername\" aria-describedby=\"emailHelp\"  onChange={updateFormData}/>\r\n              </div>\r\n              <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={formData.disableOtpButton} onClick={ handleOtpVerification }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Verify</button>\r\n              <a onClick={ handleSendOtp } class=\"pull-right link-color\">Resend OTP</a>\r\n            </form>}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\home\\dashboard\\index.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\constants\\api.js",[],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\mixins\\api.js",[],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\components\\notification-alert.js",["138","139","140","141"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ApiErrorHandler } from '../utils/error_handler'\r\n\r\nfunction NotificationAlert(props) {\r\n\r\n  const apiErrorHandler = new ApiErrorHandler();\r\n  \r\n  const firstRender = useRef(true)\r\n  useEffect(() => {\r\n    if(firstRender.current) {\r\n      firstRender.current = false\r\n      return\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {props.successMessage && <div class=\"alert alert-success\" role=\"alert\">\r\n        <a href=\"#\" class=\"alert-link\">{`Success! ${props.successMessage}.`}</a>\r\n      </div>}\r\n      {props.errorMessage && <div class=\"alert alert-danger\" role=\"alert\">\r\n        <a href=\"#\" class=\"alert-link\">{`Error! ${apiErrorHandler.handleApiErrorResponse(props.errorMessage)}.`}</a>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationAlert;\r\n","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\services\\api\\resources\\authentication.js",[],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\services\\api\\requester.js",[],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\reset-password\\index.js",["142","143","144","145","146","147"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport { SUCCESS_STATUS, ERROR_STATUS } from '../../constants/api'\r\nimport NotificationToast from '../../components/notification-alert'\r\nimport { authentication } from '../../mixins/api'\r\nimport { checkPasswordIsValid, checkPasswordIsMatch } from '../../utils/validator'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nfunction ResetPassword(props) {\r\n  const firstRender = useRef(true)  \r\n    \r\n  const [formData, setFormData] = useState({\r\n    errorMessage: \"\",\r\n    successMessage: \"\",\r\n    disableButton: true,\r\n    isPasswordValid: false,\r\n    isPasswordMatch: false,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    isLoading: false,\r\n    token: \"\"\r\n  })\r\n\r\n  const updateFormData = e => {\r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const formValidation = () => {\r\n    if(formData.confirmPassword && formData.password) {\r\n      return false;\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  const handleResetPasswordSubmission = async () => {\r\n    setFormData(prevState => ({...prevState, errorMessage: '', disableButton: true, isLoading: true}))\r\n    const resetPasswordFormData = {\r\n        password: formData.password,\r\n        confirmPassword: formData.confirmPassword\r\n    }\r\n    const forgotPasswordResponseObj = await authentication.resetPassword(resetPasswordFormData)\r\n    const { status, response } = forgotPasswordResponseObj\r\n    if(status === SUCCESS_STATUS) {\r\n\r\n    }else{\r\n      setFormData(prevState => ({...prevState, errorMessage: response, disableButton: false, isLoading: false}))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(firstRender.current) {\r\n      const { token } = props.match.params;\r\n      setFormData(prevState => ({...prevState, token: token}))\r\n      firstRender.current = false\r\n      return\r\n    } \r\n\r\n    setFormData(prevState => ({ \r\n      ...prevState, \r\n      disableButton: !checkPasswordIsValid(formData.password) || !checkPasswordIsMatch(formData.password, formData.confirmPassword),\r\n      isPasswordValid: checkPasswordIsValid(formData.password),\r\n      isPasswordMatch: checkPasswordIsMatch(formData.password, formData.confirmPassword)\r\n    }))\r\n  }, [formData.password, formData.confirmPassword])\r\n\r\n  return (\r\n    <div class=\"container h-100 forgot-password\">\r\n      <div class=\"row h-100 justify-content-center align-items-center\">\r\n        <div class=\"col-lg-offset-3 col-lg-4 col-lg-offset-3\">\r\n          <img src=\"../../assets/images/logo.png\" />\r\n          <form class=\"form\" onSubmit={ handleResetPasswordSubmission }>\r\n            <NotificationToast \r\n                successMessage={formData.successMessage}\r\n                errorMessage={formData.errorMessage}\r\n            />\r\n            <h3 class=\"center-text\">Reset Password</h3>\r\n            <hr/>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Password</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"password\" name=\"password\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\r\n              {formData.password && !formData.isPasswordValid && <small id=\"emailHelp\" class=\"form-text error\">Password must be minimum of 4 characters long.</small>}\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Confirm Password</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" aria-describedby=\"emailHelp\" onChange={updateFormData} />\r\n              {formData.confirmPassword && !formData.isPasswordMatch && <small id=\"emailHelp\" class=\"form-text error\">Password does not match.</small>}\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-default-color buttonload\" disabled={ formData.disableButton } onClick={ handleResetPasswordSubmission }>{formData.isLoading && <i class=\"fa fa-circle-o-notch fa-spin\"></i>}Reset Password</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\error_handler.js",[],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\helper.js",[],"C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\validator.js",["148","149"],"export function checkPhoneIsValid (phone) {\r\n    if (phone.startsWith('+91') && phone.length === 13) {\r\n      return true\r\n    }\r\n    if (phone.startsWith('91') && phone.length === 12) {\r\n        return true\r\n      }\r\n    if (phone.length === 10) {\r\n      return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function checkPasswordIsValid (password) {\r\n    return password.length >= 4\r\n}\r\n\r\nexport function checkPasswordIsMatch (password, confirmPassword) {\r\n    return password === confirmPassword\r\n}\r\n\r\nexport function checkEmailIsValid (email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\screens\\error\\index.js",["150","151","152","153","154"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nfunction Error() {\r\n  const firstRender = useRef(true)  \r\n    \r\n  return (\r\n    <div class=\"container h-100 forgot-password\">\r\n      <div class=\"row h-100 justify-content-center align-items-center\">\r\n        <label class=\"error-404\">404</label>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;","C:\\Users\\babatunde.ojo\\Desktop\\Project\\zaheed_campaign\\src\\utils\\storage.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":8,"column":3,"nodeType":"161","messageId":"162","endLine":8,"endColumn":11},{"ruleId":"159","severity":1,"message":"163","line":2,"column":26,"nodeType":"161","messageId":"162","endLine":2,"endColumn":38},{"ruleId":"159","severity":1,"message":"160","line":5,"column":16,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":57,"column":6,"nodeType":"166","endLine":57,"endColumn":22,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":63,"column":11,"nodeType":"170","endLine":63,"endColumn":53},{"ruleId":"159","severity":1,"message":"171","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":14},{"ruleId":"159","severity":1,"message":"172","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"163","line":5,"column":26,"nodeType":"161","messageId":"162","endLine":5,"endColumn":38},{"ruleId":"159","severity":1,"message":"173","line":64,"column":15,"nodeType":"161","messageId":"162","endLine":64,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":183,"column":6,"nodeType":"166","endLine":183,"endColumn":99,"suggestions":"174"},{"ruleId":"168","severity":1,"message":"169","line":193,"column":11,"nodeType":"170","endLine":193,"endColumn":66},{"ruleId":"175","severity":1,"message":"176","line":214,"column":45,"nodeType":"170","endLine":214,"endColumn":122},{"ruleId":"159","severity":1,"message":"163","line":4,"column":26,"nodeType":"161","messageId":"162","endLine":4,"endColumn":38},{"ruleId":"164","severity":1,"message":"177","line":149,"column":6,"nodeType":"166","endLine":149,"endColumn":108,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"169","line":165,"column":13,"nodeType":"170","endLine":165,"endColumn":68},{"ruleId":"179","severity":1,"message":"180","line":243,"column":15,"nodeType":"170","endLine":243,"endColumn":74},{"ruleId":"159","severity":1,"message":"181","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"159","severity":1,"message":"182","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":36},{"ruleId":"159","severity":1,"message":"183","line":2,"column":38,"nodeType":"161","messageId":"162","endLine":2,"endColumn":44},{"ruleId":"179","severity":1,"message":"184","line":19,"column":25,"nodeType":"170","endLine":19,"endColumn":37},{"ruleId":"179","severity":1,"message":"184","line":22,"column":25,"nodeType":"170","endLine":22,"endColumn":37},{"ruleId":"179","severity":1,"message":"184","line":25,"column":25,"nodeType":"170","endLine":25,"endColumn":37},{"ruleId":"179","severity":1,"message":"184","line":30,"column":17,"nodeType":"170","endLine":30,"endColumn":29},{"ruleId":"179","severity":1,"message":"184","line":36,"column":25,"nodeType":"170","endLine":36,"endColumn":37},{"ruleId":"179","severity":1,"message":"184","line":39,"column":25,"nodeType":"170","endLine":39,"endColumn":37},{"ruleId":"179","severity":1,"message":"184","line":42,"column":25,"nodeType":"170","endLine":42,"endColumn":37},{"ruleId":"179","severity":1,"message":"184","line":47,"column":17,"nodeType":"170","endLine":47,"endColumn":29},{"ruleId":"179","severity":1,"message":"184","line":50,"column":17,"nodeType":"170","endLine":50,"endColumn":29},{"ruleId":"179","severity":1,"message":"184","line":83,"column":37,"nodeType":"170","endLine":83,"endColumn":71},{"ruleId":"179","severity":1,"message":"184","line":84,"column":37,"nodeType":"170","endLine":84,"endColumn":71},{"ruleId":"179","severity":1,"message":"184","line":85,"column":37,"nodeType":"170","endLine":85,"endColumn":71},{"ruleId":"185","severity":1,"message":"186","line":98,"column":29,"nodeType":"170","endLine":98,"endColumn":147},{"ruleId":"179","severity":1,"message":"184","line":98,"column":148,"nodeType":"170","endLine":98,"endColumn":160},{"ruleId":"179","severity":1,"message":"184","line":98,"column":302,"nodeType":"170","endLine":98,"endColumn":314},{"ruleId":"179","severity":1,"message":"184","line":98,"column":438,"nodeType":"170","endLine":98,"endColumn":450},{"ruleId":"179","severity":1,"message":"184","line":106,"column":30,"nodeType":"170","endLine":106,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":107,"column":33,"nodeType":"170","endLine":107,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":110,"column":30,"nodeType":"170","endLine":110,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":111,"column":33,"nodeType":"170","endLine":111,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":114,"column":30,"nodeType":"170","endLine":114,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":115,"column":33,"nodeType":"170","endLine":115,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":118,"column":30,"nodeType":"170","endLine":118,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":119,"column":33,"nodeType":"170","endLine":119,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":122,"column":30,"nodeType":"170","endLine":122,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":123,"column":33,"nodeType":"170","endLine":123,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":126,"column":30,"nodeType":"170","endLine":126,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":127,"column":33,"nodeType":"170","endLine":127,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":130,"column":30,"nodeType":"170","endLine":130,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":131,"column":33,"nodeType":"170","endLine":131,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":134,"column":30,"nodeType":"170","endLine":134,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":135,"column":33,"nodeType":"170","endLine":135,"endColumn":45},{"ruleId":"179","severity":1,"message":"184","line":138,"column":30,"nodeType":"170","endLine":138,"endColumn":42},{"ruleId":"179","severity":1,"message":"184","line":139,"column":33,"nodeType":"170","endLine":139,"endColumn":45},{"ruleId":"159","severity":1,"message":"181","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"171","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"184","line":20,"column":9,"nodeType":"170","endLine":20,"endColumn":40},{"ruleId":"179","severity":1,"message":"184","line":23,"column":9,"nodeType":"170","endLine":23,"endColumn":40},{"ruleId":"159","severity":1,"message":"163","line":2,"column":26,"nodeType":"161","messageId":"162","endLine":2,"endColumn":38},{"ruleId":"159","severity":1,"message":"171","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":6,"column":16,"nodeType":"161","messageId":"162","endLine":6,"endColumn":24},{"ruleId":"159","severity":1,"message":"187","line":27,"column":9,"nodeType":"161","messageId":"162","endLine":27,"endColumn":23},{"ruleId":"164","severity":1,"message":"188","line":64,"column":6,"nodeType":"166","endLine":64,"endColumn":51,"suggestions":"189"},{"ruleId":"168","severity":1,"message":"169","line":70,"column":11,"nodeType":"170","endLine":70,"endColumn":53},{"ruleId":"190","severity":1,"message":"191","line":23,"column":24,"nodeType":"192","messageId":"193","endLine":23,"endColumn":25,"suggestions":"194"},{"ruleId":"190","severity":1,"message":"191","line":23,"column":49,"nodeType":"192","messageId":"193","endLine":23,"endColumn":50,"suggestions":"195"},{"ruleId":"159","severity":1,"message":"181","line":1,"column":25,"nodeType":"161","messageId":"162","endLine":1,"endColumn":33},{"ruleId":"159","severity":1,"message":"182","line":1,"column":35,"nodeType":"161","messageId":"162","endLine":1,"endColumn":44},{"ruleId":"159","severity":1,"message":"171","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":2,"column":16,"nodeType":"161","messageId":"162","endLine":2,"endColumn":24},{"ruleId":"159","severity":1,"message":"196","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":20},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ERROR_STATUS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formValidation'. Either include it or remove the dependency array.","ArrayExpression",["199"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'SUCCESS_STATUS' is defined but never used.","'result' is assigned a value but never used.",["200"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'formData.redirect', 'loginFormValidation', and 'registerFormValidation'. Either include them or remove the dependency array.",["201"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'formValidation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.",["202"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["203","204"],["205","206"],"'firstRender' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"messageId":"215","fix":"216","desc":"217"},{"messageId":"218","fix":"219","desc":"220"},{"messageId":"215","fix":"221","desc":"217"},{"messageId":"218","fix":"222","desc":"220"},"Update the dependencies array to be: [formData.email, formValidation]",{"range":"223","text":"224"},"Update the dependencies array to be: [formData.email, formData.firstName, formData.lastName, formData.phoneNumber, formValidation]",{"range":"225","text":"226"},"Update the dependencies array to be: [formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername, formData.redirect, loginFormValidation, registerFormValidation]",{"range":"227","text":"228"},"Update the dependencies array to be: [formData.password, formData.confirmPassword, props.match.params]",{"range":"229","text":"230"},"removeEscape",{"range":"231","text":"232"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"233","text":"234"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"235","text":"232"},{"range":"236","text":"234"},[1741,1757],"[formData.email, formValidation]",[5575,5668],"[formData.email, formData.firstName, formData.lastName, formData.phoneNumber, formValidation]",[5715,5817],"[formData.loginUsername, formData.loginPassword, formData.registerPassword, formData.registerUsername, formData.redirect, loginFormValidation, registerFormValidation]",[2200,2245],"[formData.password, formData.confirmPassword, props.match.params]",[570,571],"",[570,570],"\\",[595,596],[595,595]]